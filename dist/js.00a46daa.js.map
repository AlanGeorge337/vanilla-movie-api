{"version":3,"sources":["js/genres.js","js/index.js"],"names":["genres","id","name","DOMSelectors","grid","document","querySelector","key","query","init","response","fetch","data","json","results","forEach","movie","insertAdjacentHTML","original_title","vote_average","release_date","genreArr","error","console","log"],"mappings":";;ACsBA;;AAtBA;AACA;ADDA,ACEA,MDFMA,MAAM,GAAG,CACX;AACEC,ACCN,EDDMA,EAAE,EAAE,EADN;AAEEC,ACCN,EDDMA,IAAI,EAAE;AAFR,ACIJ,CDLe,EAKX;AACED,ACAN,EDAMA,EAAE,EAAE,EADN;AAEEC,ACCN,EDDMA,IAAI,EAAE;AAFR,ACIJ,CDTe,EASX;AACED,ACAN,EDAMA,EAAE,EAAE,EADN;AAEEC,ACAN,EDAMA,IAAI,EAAE;AAFR,ACGJ,CDZe,EAaX;AACED,ACDN,EDCMA,EAAE,EAAE,EADN;AAEEC,ACDN,EDCMA,IAAI,EAAE;AAFR,ACEJ,CDfe,EAiBX;AACED,ACFN,EDEMA,EAAE,EAAE,EADN;AAEEC,ACFN,EDEMA,IAAI,EAAE;AAFR,ACCJ,CDlBe,EAqBX;AACED,ACHN,EDGMA,EAAE,EAAE,EADN;AAEEC,ACHN,EDGMA,IAAI,EAAE;AAFR,ACGJ,CDxBe,EAyBX,GCDEC,YAAY,GAAG;ADEfF,ACDFG,EDCEH,ACDFG,EDCI,EAAE,ACDF,EDAJ,ACAMC,QAAQ,CAACC,aAAT,CAAuB,aAAvB;ADEJJ,ACHe,CAArB,CDGMA,IAAI,EAAE;AAFR,ACGJ,CD5Be,EA6BX,GCDEK,GAAG,qCAAT;ADEMN,ACDN,EDCMA,EAAE,EAAE,ACDJO,KDAF,ACAO,oFAAX;ADEMN,EAAAA,IAAI,EAAE;AAFR,ACEJ,CD/Be,EAiCX,GCFEO,IAAI,GAAG,eAAPA,IAAO,GAAiB;ADGxBR,ACFF,EDEEA,EAAE,EAAE,ACFF,EDCJ;AAEEC,ACFE,EDEFA,IAAI,EAAE,ECFEQ,QAAQ,GAAG,MAAMC,KAAK,CAACH,KAAD,CAA5B;ADAJ,ACCI,CDlCO,EAqCX,OCHUI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;ADIFZ,ACHEW,EDGFX,EAAE,ACHAW,EDGE,EADN,ACFQ,CAACE,OAAL,CAAaC,OAAb,CAAsBC,KAAD,IAAW;ADIlCd,ACHMC,EDGND,IAAI,ACHEC,EDGA,UCHY,CAACC,IAAb,CAAkBa,kBAAlB,CAAqC,WAArC,4WASkCD,KAAK,CAACE,cATxC,kKAY4BF,KAAK,CAACG,YAZlC,4LAiB8BH,KAAK,CAACI,YAjBpC,gHAqBWC,QArBX;ADCR,ACwBK,CD7DM,EAyCX,ECNI;ADOFpB,ACoBD,EDpBCA,CCVF,CDUI,ACoBF,EDpBI,EADN,GCqBSqB,KAAP,EAAc;ADnBdpB,ACoBEqB,EDpBFrB,ECoBEqB,EDpBE,EAAE,GCoBG,CAACC,GAAR,CAAYF,KAAZ;ADtBJ,ACuBC,CDhEU,EA6CX;AACErB,ACmBL,CAlCD,CDeMA,EAAE,EAAE,KADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,ACsBJ,CDnEe,EAiDX,GCkBEmB,QAAQ,GACdZ,IAAI,EADJ;ADjBMR,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAjDW,EAqDX;AACED,EAAAA,EAAE,EAAE,KADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CArDW,EAyDX;AACED,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAzDW,EA6DX;AACED,EAAAA,EAAE,EAAE,KADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CA7DW,EAiEX;AACED,EAAAA,EAAE,EAAE,EADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAjEW,EAqEX;AACED,EAAAA,EAAE,EAAE,KADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CArEW,EAyEX;AACED,EAAAA,EAAE,EAAE,EADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAzEW,CAAf","file":"js.00a46daa.js","sourceRoot":"..\\src","sourcesContent":["const genres = [\r\n    {\r\n      id: 28,\r\n      name: \"Action\",\r\n    },\r\n    {\r\n      id: 12,\r\n      name: \"Adventure\",\r\n    },\r\n    {\r\n      id: 16,\r\n      name: \"Animation\",\r\n    },\r\n    {\r\n      id: 35,\r\n      name: \"Comedy\",\r\n    },\r\n    {\r\n      id: 80,\r\n      name: \"Crime\",\r\n    },\r\n    {\r\n      id: 99,\r\n      name: \"Documentary\",\r\n    },\r\n    {\r\n      id: 18,\r\n      name: \"Drama\",\r\n    },\r\n    {\r\n      id: 10751,\r\n      name: \"Family\",\r\n    },\r\n    {\r\n      id: 14,\r\n      name: \"Fantasy\",\r\n    },\r\n    {\r\n      id: 36,\r\n      name: \"History\",\r\n    },\r\n    {\r\n      id: 27,\r\n      name: \"Horror\",\r\n    },\r\n    {\r\n      id: 10402,\r\n      name: \"Music\",\r\n    },\r\n    {\r\n      id: 9648,\r\n      name: \"Mystery\",\r\n    },\r\n    {\r\n      id: 10749,\r\n      name: \"Romance\",\r\n    },\r\n    {\r\n      id: 878,\r\n      name: \"Science Fiction\",\r\n    },\r\n    {\r\n      id: 10770,\r\n      name: \"TV Movie\",\r\n    },\r\n    {\r\n      id: 53,\r\n      name: \"Thriller\",\r\n    },\r\n    {\r\n      id: 10752,\r\n      name: \"War\",\r\n    },\r\n    {\r\n      id: 37,\r\n      name: \"Western\",\r\n    },\r\n  ];\r\n  \r\n  export { genres };","// function getPkmn(){\r\n//     fetch(`https://pokeapi.co/api/v2/pokemon/mudkip`).then((result) => {\r\n//         return result.json();\r\n//     }).then((data) => {\r\n//         console.log(data);\r\n//     });\r\n// }\r\n\r\n// const pkmn = \"mewtwo\";\r\n// async function getPkmn (){\r\n//     try{\r\n//         const result = await fetch(`https://pokeapi.co/api/v2/pokemon/${pkmn}`);\r\n//         const data = await result.json();\r\n//         console.log(data);\r\n//     } \r\n//         catch (error) {\r\n//             console.log(error);\r\n//             alert(\"did u mean mudkip?\");\r\n//         }\r\n// }\r\n// getPkmn();\r\n\r\nimport { genres } from \"./genres\";\r\n\r\nconst DOMSelectors = {\r\n    grid: document.querySelector(\".movie-grid\"),\r\n};\r\n\r\nconst key = `722a815252affd4774ebb49aa900cdb8`;\r\nconst query = `https://api.themoviedb.org/3/movie/550?api_key=722a815252affd4774ebb49aa900cdb8`;\r\n\r\nconst init = async function (){\r\n    try {\r\n        const response = await fetch(query);\r\n        const data = await response.json();\r\n        data.results.forEach((movie) => {\r\n            DOMSelectors.grid.insertAdjacentHTML(\"beforeend\", `<div class=\"movie-card\">\r\n            <div class=\"movie-card-front\">\r\n              <img\r\n                src=\"https://image.tmdb.org/t/p/w500/poster_path\"\r\n                alt=\"\"\r\n                class=\"poster\"\r\n              />\r\n            </div>\r\n            <div class=\"movie-card-back\">\r\n              <h3 class=\"movie-card-header\">${movie.original_title}</h3>\r\n              <div class=\"score-box\">\r\n                <p class=\"user-score\">Community Score</p>\r\n                <p class=\"user-score\">${movie.vote_average}</p>\r\n              </div>\r\n    \r\n              <div class=\"release-box\">\r\n                <p class=\"release-date\">Released</p>\r\n                <p class=\"release-date\">${movie.release_date}</p>\r\n              </div>\r\n    \r\n              <div class=\"movie-genres\">\r\n                <div>${genreArr}</div> \r\n              </div>\r\n            </div>\r\n          </div>`)\r\n        })\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst genreArr = \r\ninit();"]}